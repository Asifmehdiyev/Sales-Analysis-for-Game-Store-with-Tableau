<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='KPI Parameter' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
        <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
        <members />
      </column>
      <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
        <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
        <members>
          <member value='&quot;Total Revenue&quot;' />
          <member value='&quot;Minutes of Usage&quot;' />
          <member value='&quot;OnNet Minutes of Usage&quot;' />
          <member value='&quot;OffNet Minutes of Usage&quot;' />
          <member value='&quot;MB of Usage&quot;' />
        </members>
      </column>
      <column caption='Comparison of Daily tarrifs' datatype='string' name='[Parameter 2 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;average data revenue per subscriber&quot;'>
        <calculation class='tableau' formula='&quot;average data revenue per subscriber&quot;' />
        <members />
      </column>
      <column caption='Compare tariffs' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ave Data Rev per Sub&quot;'>
        <calculation class='tableau' formula='&quot;Ave Data Rev per Sub&quot;' />
        <members>
          <member value='&quot;Ave Rev per Sub&quot;' />
          <member value='&quot;Ave Voice Rev per Sub&quot;' />
          <member value='&quot;Ave Data Rev per Sub&quot;' />
          <member value='&quot;Ave On-net Rev Per Sub&quot;' />
          <member value='&quot;Ave Off-net Rev Per Sub&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Data+ (Performance Analysis)' inline='true' name='federated.05um8371gnde4212sdxz61s23u5r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Performance Analysis' name='excel-direct.166zjzl13dph981dgh7bf10fjl3q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASIF MEHDIYEV/Desktop/TABLEAU Capstone/Performance Analysis.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.166zjzl13dph981dgh7bf10fjl3q' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.166zjzl13dph981dgh7bf10fjl3q' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tariff_Id]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff_Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Revenue Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Revenue Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Revenue Subscribers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Voice Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Voice Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Voice Subscribers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Data Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Data subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Data subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Data subscribers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MB of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MB of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>MB of Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Revenue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OnNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OnNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OnNet Subscribers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Minutes of Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Revenue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OffNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OffNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OffNet Subscribers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Minutes of Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M6929:no:A1:M6929:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tariff]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B17:no:A1:B17:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
      </column>
      <column caption='Minutes of Usage' datatype='integer' name='[Calculation_4083076078966431745]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([OffNet Minutes of Usage])+([OnNet Minutes of Usage])' />
      </column>
      <column caption='KPI Total' datatype='integer' name='[Calculation_4083076078971117572]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Revenue&quot; THEN [Calculation_4083076078963347456]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Minutes of Usage&quot; THEN [Calculation_4083076078966431745]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OnNet Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OffNet Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;MB of Usage&quot; THEN [MB of Usage]&#13;&#10;END' />
      </column>
      <column caption='Last Week' datatype='integer' name='[Calculation_4083076078974504965]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LAST()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Growth rate' datatype='real' name='[Calculation_4083076078984278025]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_4083076078971117572])-LOOKUP(SUM([Calculation_4083076078971117572]), -1))/LOOKUP(SUM([Calculation_4083076078971117572]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='KPI Condition' datatype='string' name='[Calculation_4083076078989168650]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_4083076078984278025] &lt; 0 THEN &apos;ALARM!!! &apos; + [Parameters].[Parameter 1] + &apos; decreased &apos; + STR(ROUND(ABS([Calculation_4083076078984278025]), 2)) + &apos;% in the last week&apos;&#13;&#10;ELSEIF [Calculation_4083076078984278025] &gt; 0 THEN &apos;Good news!!! &apos; + [Parameters].[Parameter 1] + &apos; increased &apos; +  STR(ROUND(ABS([Calculation_4083076078984278025]), 2)) + &apos;% in the last week&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ave Rev per Sub' datatype='real' name='[Calculation_4083076079004811280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4083076078963347456]/ ([Number of Voice Subscribers]+[Number of Data subscribers])' />
      </column>
      <column caption='Ave Voice Rev per Sub' datatype='real' name='[Calculation_4083076079005687825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([OnNet Revenue]+[OffNet Revenue])/[Number of Voice Subscribers]' />
      </column>
      <column caption='Ave Data Rev per Sub' datatype='real' name='[Calculation_4083076079005966354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Number of Data subscribers]' />
      </column>
      <column caption='Ave On-net Rev Per Sub' datatype='real' name='[Calculation_4083076079006781459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]/[Number of OnNet Subscribers]' />
      </column>
      <column caption='Ave Off-net Rev Per Sub' datatype='real' name='[Calculation_4083076079006986260]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue]/[Number of OffNet Subscribers]' />
      </column>
      <column caption='Compare' datatype='real' name='[Calculation_4083076079017013269]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Ave Rev per Sub&apos; THEN [Calculation_4083076079004811280]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave Voice Rev per Sub&apos; THEN [Calculation_4083076079005687825]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave Data Rev per Sub&apos; THEN [Calculation_4083076079005966354]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave On-net Rev Per Sub&apos; THEN [Calculation_4083076079006781459]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave Off-net Rev Per Sub&apos; THEN [Calculation_4083076079006986260]&#13;&#10;END' />
      </column>
      <column caption='Total Voice Revenue' datatype='integer' name='[Calculation_4083076079019061270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]+[OffNet Revenue]' />
      </column>
      <column caption='Portion of Data and Total Rev' datatype='real' name='[Calculation_4083076079022559255]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Calculation_4083076078963347456]' />
      </column>
      <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
      <column-instance column='[Name]' derivation='Attribute' name='[attr:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4083076079019061270]' derivation='Sum' name='[sum:Calculation_4083076079019061270:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
      <group caption='Tooltip (Name)' hidden='true' name='[Tooltip (Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.380776' measure-ordering='alphabetic' measure-percentage='0.44732' parameter-percentage='0.171904' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
          <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
        </column>
        <column caption='Compare tariffs' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ave Data Rev per Sub&quot;'>
          <calculation class='tableau' formula='&quot;Ave Data Rev per Sub&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{ec00e8c5-cfee-465a-9ff3-3fe6e5a12b93}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.05um8371gnde4212sdxz61s23u5r].[attr:Name:nk]' />
            <field name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079019061270:qk]' />
            <field name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Data Revenue:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
    <datasource caption='Data+ (Performance Analysis) (3)' inline='true' name='federated.13mlsz6053ihih1cegxe70afur2t (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Performance Analysis' name='excel-direct.0csk0s01h4xgsk197nijd0z52m1z (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASIF MEHDIYEV/Desktop/TABLEAU Capstone/Performance Analysis.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0csk0s01h4xgsk197nijd0z52m1z (copy)' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0csk0s01h4xgsk197nijd0z52m1z (copy)' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tariff_Id]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff_Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Revenue Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Revenue Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Revenue Subscribers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Voice Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Voice Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Voice Subscribers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Data Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Data subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Data subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Data subscribers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MB of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MB of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>MB of Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Revenue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OnNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OnNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OnNet Subscribers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Minutes of Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Revenue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OffNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OffNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OffNet Subscribers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Minutes of Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M6929:no:A1:M6929:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tariff]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B17:no:A1:B17:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Revenue ' datatype='integer' name='[Calculation_675258535926009856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
      </column>
      <column caption='Average revenue per subscriber ' datatype='real' name='[Calculation_675258535927947265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_675258535926009856]/[Calculation_675258535929581571]' />
      </column>
      <column caption='Total Number of Subscribers ' datatype='integer' name='[Calculation_675258535929581571]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Data subscribers]+[Number of OffNet Subscribers]+[Number of OnNet Subscribers]+[Number of Revenue Subscribers]+[Number of Voice Subscribers]' />
      </column>
      <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_675258535930462212]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]+[OffNet Revenue]' />
      </column>
      <column caption='Average Voice Revenue per Subscriber ' datatype='real' name='[Calculation_675258535930646533]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_675258535930462212]/[Number of Voice Subscribers]' />
      </column>
      <column caption='Average Data Revenue Per Subscriber' datatype='real' name='[Calculation_675258535930867718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Number of Data subscribers]' />
      </column>
      <column caption='Average On-net Revenue Per Subscriber' datatype='real' name='[Calculation_675258535931113479]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]/[Number of OnNet Subscribers]' />
      </column>
      <column caption='Average Off-net Revenue Per Subscriber' datatype='real' name='[Calculation_675258535931281416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue]/[Number of OffNet Subscribers]' />
      </column>
      <column caption='KPI&apos;s' datatype='integer' name='[Calculation_675258535931768841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1 1] = &quot;Total Revenue&quot; THEN [Calculation_675258535926009856]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;Minutes of Usage&quot; THEN [Calculation_675258535932567562]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;On-net Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;Off-net Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;MB of usage&quot; THEN [MB of Usage]&#13;&#10;END' />
      </column>
      <column caption='Total Minutes of Usage' datatype='integer' name='[Calculation_675258535932567562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
      </column>
      <column caption='Last Week' datatype='boolean' name='[Calculation_675258535934341131]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LAST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='negative/positive' datatype='string' name='[Calculation_675258535943045139]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_675258535945465876] &lt; 0 THEN &apos;ALARM!!! &apos; + [Parameters].[Parameter 1 1] + &apos; decreased &apos; + STR(ROUND(ABS([Calculation_675258535945465876]), 2)) + &apos;% in the last week&apos;&#13;&#10;ELSEIF [Calculation_675258535945465876] &gt; 0 THEN &apos;Good news!!! &apos; + [Parameters].[Parameter 1 1] + &apos; increased &apos; +  STR(ROUND(ABS([Calculation_675258535945465876]), 2)) + &apos;% in the last week&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Growth Rate' datatype='real' name='[Calculation_675258535945465876]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_675258535931768841])-LOOKUP(SUM([Calculation_675258535931768841]), -1))/LOOKUP(SUM([Calculation_675258535931768841]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Negative positive 1' datatype='string' name='[Calculation_675258535962169371]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_675258535945465876] &lt; 0 THEN &apos;Alarm&apos;&#13;&#10;ELSEIF [Calculation_675258535945465876] &gt; 0 THEN &apos;Good News&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Tariffs' datatype='real' name='[Calculation_675258535965855772]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2 1] = &quot;average revenue per subscriber&quot; THEN [Calculation_675258535927947265]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average voice revenue per subscriber&quot; THEN [Calculation_675258535930646533]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average data revenue per subscriber&quot; THEN [Calculation_675258535930867718]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average on-net revenue per subscriber&quot; THEN [Calculation_675258535931113479]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average off-net revenue per subscriber&quot; THEN [Calculation_675258535931281416]&#13;&#10;END' />
      </column>
      <column caption='Portion of data Revenue in total revenue ' datatype='real' name='[Calculation_675258535981273125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Calculation_675258535926009856]' />
      </column>
      <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
      <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_675258535931768841]' derivation='Sum' name='[pcdf:sum:Calculation_675258535931768841:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_675258535927947265]' derivation='Sum' name='[sum:Calculation_675258535927947265:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535930462212]' derivation='Sum' name='[sum:Calculation_675258535930462212:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535930646533]' derivation='Sum' name='[sum:Calculation_675258535930646533:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535930867718]' derivation='Sum' name='[sum:Calculation_675258535930867718:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535931113479]' derivation='Sum' name='[sum:Calculation_675258535931113479:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535931281416]' derivation='Sum' name='[sum:Calculation_675258535931281416:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535931768841]' derivation='Sum' name='[sum:Calculation_675258535931768841:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535943045139]' derivation='User' name='[usr:Calculation_675258535943045139:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[Calculation_675258535945465876]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_675258535962169371]' derivation='User' name='[usr:Calculation_675258535962169371:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[Calculation_675258535945465876]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (WEEK(Date),Name)' hidden='true' name='[Action (WEEK(Date),Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:Date:ok]' />
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Name)' hidden='true' name='[Tooltip (Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.356747' measure-ordering='alphabetic' measure-percentage='0.471349' parameter-percentage='0.171904' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_675258535943045139:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56494984924004676\% in the last week&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.47\% in the last week&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.47\% in the last week&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.57\% in the last week&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.57\% in the last week&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Good News&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56\% in the last week&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.56\% in the last week&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56753004289309816\% in the last week&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56721230158730163\% in the last week&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.54600484261501214\% in the last week&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -1.00\% in the last week&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 1.00\% in the last week&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -1\% in the last week&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.46970789339039026\% in the last week&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.59685471249246569\% in the last week&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.60\% in the last week&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.60\% in the last week&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.54795023027522405\% in the last week&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56767573698176566\% in the last week&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.57263711382319615\% in the last week&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.97408111563483335\% in the last week&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alarm&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.55\% in the last week&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.55\% in the last week&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.58\% in the last week&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.58\% in the last week&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.55498888452988104\% in the last week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.51766469828907236\% in the last week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.52\% in the last week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.52\% in the last week&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.57712350651846633\% in the last week&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56748687196924652\% in the last week&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.97\% in the last week&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.97\% in the last week&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.54537749841090477\% in the last week&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_675258535962169371:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Good News&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alarm&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535931768841:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535931113479:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535931281416:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535930462212:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535927947265:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535930867718:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:OnNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535930646533:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[pcdf:sum:Calculation_675258535931768841:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:OffNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[pcdf:sum:Data Revenue:qk:1]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[pcdf:sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Data Revenue:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Parameter' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
        </column>
        <column caption='Comparison of Daily tarrifs' datatype='string' name='[Parameter 2 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;average data revenue per subscriber&quot;'>
          <calculation class='tableau' formula='&quot;average data revenue per subscriber&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Data+ (Performance Analysis) (2)' inline='true' name='federated.13mlsz6053ihih1cegxe70afur2t (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Performance Analysis' name='excel-direct.0csk0s01h4xgsk197nijd0z52m1z'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASIF MEHDIYEV/Desktop/TABLEAU Capstone/Performance Analysis.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0csk0s01h4xgsk197nijd0z52m1z' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0csk0s01h4xgsk197nijd0z52m1z' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tariff_Id]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff_Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Revenue Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Revenue Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Revenue Subscribers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Voice Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Voice Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Voice Subscribers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Data Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Data subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Data subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Data subscribers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MB of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MB of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>MB of Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Revenue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OnNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OnNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OnNet Subscribers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Minutes of Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Revenue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OffNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OffNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OffNet Subscribers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Minutes of Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M6929:no:A1:M6929:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tariff]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B17:no:A1:B17:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Revenue ' datatype='integer' name='[Calculation_675258535926009856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
      </column>
      <column caption='Average revenue per subscriber ' datatype='real' name='[Calculation_675258535927947265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_675258535926009856]/[Calculation_675258535929581571]' />
      </column>
      <column caption='Total Number of Subscribers ' datatype='integer' name='[Calculation_675258535929581571]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Data subscribers]+[Number of OffNet Subscribers]+[Number of OnNet Subscribers]+[Number of Revenue Subscribers]+[Number of Voice Subscribers]' />
      </column>
      <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_675258535930462212]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]+[OffNet Revenue]' />
      </column>
      <column caption='Average Voice Revenue per Subscriber ' datatype='real' name='[Calculation_675258535930646533]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_675258535930462212]/[Number of Voice Subscribers]' />
      </column>
      <column caption='Average Data Revenue Per Subscriber' datatype='real' name='[Calculation_675258535930867718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Number of Data subscribers]' />
      </column>
      <column caption='Average On-net Revenue Per Subscriber' datatype='real' name='[Calculation_675258535931113479]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]/[Number of OnNet Subscribers]' />
      </column>
      <column caption='Average Off-net Revenue Per Subscriber' datatype='real' name='[Calculation_675258535931281416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue]/[Number of OffNet Subscribers]' />
      </column>
      <column caption='KPI&apos;s' datatype='integer' name='[Calculation_675258535931768841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1 1] = &quot;Total Revenue&quot; THEN [Calculation_675258535926009856]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;Minutes of Usage&quot; THEN [Calculation_675258535932567562]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;On-net Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;Off-net Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1 1] = &quot;MB of usage&quot; THEN [MB of Usage]&#13;&#10;END' />
      </column>
      <column caption='Total Minutes of Usage' datatype='integer' name='[Calculation_675258535932567562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
      </column>
      <column caption='Last Week' datatype='boolean' name='[Calculation_675258535934341131]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LAST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='negative/positive' datatype='string' name='[Calculation_675258535943045139]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_675258535945465876] &lt; 0 THEN &apos;ALARM!!! &apos; + [Parameters].[Parameter 1 1] + &apos; decreased &apos; + STR(ROUND(ABS([Calculation_675258535945465876]), 2)) + &apos;% in the last week&apos;&#13;&#10;ELSEIF [Calculation_675258535945465876] &gt; 0 THEN &apos;Good news!!! &apos; + [Parameters].[Parameter 1 1] + &apos; increased &apos; +  STR(ROUND(ABS([Calculation_675258535945465876]), 2)) + &apos;% in the last week&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Growth Rate' datatype='real' name='[Calculation_675258535945465876]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_675258535931768841])-LOOKUP(SUM([Calculation_675258535931768841]), -1))/LOOKUP(SUM([Calculation_675258535931768841]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Negative positive 1' datatype='string' name='[Calculation_675258535962169371]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_675258535945465876] &lt; 0 THEN &apos;Alarm&apos;&#13;&#10;ELSEIF [Calculation_675258535945465876] &gt; 0 THEN &apos;Good News&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Tariffs' datatype='real' name='[Calculation_675258535965855772]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2 1] = &quot;average revenue per subscriber&quot; THEN [Calculation_675258535927947265]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average voice revenue per subscriber&quot; THEN [Calculation_675258535930646533]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average data revenue per subscriber&quot; THEN [Calculation_675258535930867718]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average on-net revenue per subscriber&quot; THEN [Calculation_675258535931113479]&#13;&#10;ELSEIF [Parameters].[Parameter 2 1] = &quot;average off-net revenue per subscriber&quot; THEN [Calculation_675258535931281416]&#13;&#10;END' />
      </column>
      <column caption='Portion of data Revenue in total revenue ' datatype='real' name='[Calculation_675258535981273125]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Calculation_675258535926009856]' />
      </column>
      <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
      <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_675258535931768841]' derivation='Sum' name='[pcdf:sum:Calculation_675258535931768841:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_675258535927947265]' derivation='Sum' name='[sum:Calculation_675258535927947265:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535930462212]' derivation='Sum' name='[sum:Calculation_675258535930462212:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535930646533]' derivation='Sum' name='[sum:Calculation_675258535930646533:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535930867718]' derivation='Sum' name='[sum:Calculation_675258535930867718:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535931113479]' derivation='Sum' name='[sum:Calculation_675258535931113479:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535931281416]' derivation='Sum' name='[sum:Calculation_675258535931281416:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535931768841]' derivation='Sum' name='[sum:Calculation_675258535931768841:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_675258535943045139]' derivation='User' name='[usr:Calculation_675258535943045139:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Calculation_675258535945465876]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_675258535962169371]' derivation='User' name='[usr:Calculation_675258535962169371:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Calculation_675258535945465876]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (WEEK(Date),Name)' hidden='true' name='[Action (WEEK(Date),Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:Date:ok]' />
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Name)' hidden='true' name='[Tooltip (Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.319778' measure-ordering='alphabetic' measure-percentage='0.508318' parameter-percentage='0.171904' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_675258535943045139:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56494984924004676\% in the last week&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.47\% in the last week&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.47\% in the last week&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.57\% in the last week&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.57\% in the last week&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Good News&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56\% in the last week&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.56\% in the last week&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56753004289309816\% in the last week&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56721230158730163\% in the last week&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.54600484261501214\% in the last week&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -1.00\% in the last week&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 1.00\% in the last week&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -1\% in the last week&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.46970789339039026\% in the last week&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.59685471249246569\% in the last week&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.60\% in the last week&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.60\% in the last week&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.54795023027522405\% in the last week&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56767573698176566\% in the last week&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.57263711382319615\% in the last week&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.97408111563483335\% in the last week&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alarm&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.55\% in the last week&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.55\% in the last week&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.58\% in the last week&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.58\% in the last week&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.55498888452988104\% in the last week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.51766469828907236\% in the last week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.52\% in the last week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.52\% in the last week&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.57712350651846633\% in the last week&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.56748687196924652\% in the last week&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.97\% in the last week&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;ALARM!!! Total Revenue decreased 0.97\% in the last week&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALARM!!! Total Revenue decreased -0.54537749841090477\% in the last week&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_675258535962169371:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Good News&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alarm&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535931768841:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535931113479:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535931281416:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535930462212:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535927947265:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535930867718:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:OnNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Calculation_675258535930646533:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[pcdf:sum:Calculation_675258535931768841:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:OffNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[pcdf:sum:Data Revenue:qk:1]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[pcdf:sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[sum:Data Revenue:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Parameter' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
        </column>
        <column caption='Comparison of Daily tarrifs' datatype='string' name='[Parameter 2 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;average data revenue per subscriber&quot;'>
          <calculation class='tableau' formula='&quot;average data revenue per subscriber&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Daily Rev_task1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Total Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4083076078963347456]' derivation='Sum' name='[sum:Calculation_4083076078963347456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078963347456:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[dy:Date:ok]</cols>
      </table>
      <simple-id uuid='{1C8B57FF-41A0-4BD1-84B7-9EB769DF595C}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6709362F-718D-470E-819F-D3DDB3FDBDB3}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>List top 5 tariffs for each KPI in the last week and growth rate for each of them.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
              <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_4083076078966431745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([OffNet Minutes of Usage])+([OnNet Minutes of Usage])' />
            </column>
            <column caption='KPI Total' datatype='integer' name='[Calculation_4083076078971117572]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Revenue&quot; THEN [Calculation_4083076078963347456]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Minutes of Usage&quot; THEN [Calculation_4083076078966431745]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OnNet Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OffNet Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;MB of Usage&quot; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column caption='Growth rate' datatype='real' name='[Calculation_4083076078984278025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_4083076078971117572])-LOOKUP(SUM([Calculation_4083076078971117572]), -1))/LOOKUP(SUM([Calculation_4083076078971117572]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4083076078971117572]' derivation='Sum' name='[sum:Calculation_4083076078971117572:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076078984278025]' derivation='User' name='[usr:Calculation_4083076078984278025:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_4083076078971117572])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]'>
            <groupfilter function='member' level='[wk:Date:ok]' member='53' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</column>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078984278025:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' />
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078984278025:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078971117572:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{1F5AFDEE-E6B9-4C74-95F3-49C91227150F}' />
    </worksheet>
    <worksheet name='Task 1 and 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Weekly Time Plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
              <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_4083076078966431745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([OffNet Minutes of Usage])+([OnNet Minutes of Usage])' />
            </column>
            <column caption='KPI Total' datatype='integer' name='[Calculation_4083076078971117572]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Revenue&quot; THEN [Calculation_4083076078963347456]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Minutes of Usage&quot; THEN [Calculation_4083076078966431745]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OnNet Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OffNet Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;MB of Usage&quot; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4083076078971117572]' derivation='Sum' name='[sum:Calculation_4083076078971117572:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078971117572:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{9FF8CF45-9C57-4CD8-828E-F3E9E68279C6}' />
    </worksheet>
    <worksheet name='Task 1_After Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which tariff has the highest revenue on January, 2020?&#10;Answer: tariff id 1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='MY' name='[my:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4083076078963347456]' derivation='Sum' name='[sum:Calculation_4083076078963347456:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]'>
            <groupfilter function='member' level='[my:Date:ok]' member='202001' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.05um8371gnde4212sdxz61s23u5r].[none:Tariff_Id:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078963347456:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078963347456:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[none:Tariff_Id:ok]</cols>
      </table>
      <simple-id uuid='{8222FFF7-CA92-488A-BB2F-2F84C329403D}' />
    </worksheet>
    <worksheet name='Task 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Revenue Proportion</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_4083076079002935309]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_4083076079002951695]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4083076078963347456]' derivation='Sum' name='[pcto:sum:Calculation_4083076078963347456:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4083076078963347456]' derivation='Sum' name='[sum:Calculation_4083076078963347456:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076079002935309]' derivation='Sum' name='[sum:Calculation_4083076079002935309:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076079002951695]' derivation='Sum' name='[sum:Calculation_4083076079002951695:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079002951695:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079002935309:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' />
              <wedge-size column='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078963347456:qk]' />
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[pcto:sum:Calculation_4083076078963347456:qk]' />
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.4364640712738037' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079002951695:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.0386741161346436' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079002935309:qk] + [federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079002951695:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{A704FCEA-FA39-4327-BFE1-148077AC5476}' />
    </worksheet>
    <worksheet name='Task 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Compare Tariffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare tariffs' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ave Data Rev per Sub&quot;'>
              <calculation class='tableau' formula='&quot;Ave Data Rev per Sub&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='Ave Rev per Sub' datatype='real' name='[Calculation_4083076079004811280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4083076078963347456]/ ([Number of Voice Subscribers]+[Number of Data subscribers])' />
            </column>
            <column caption='Ave Voice Rev per Sub' datatype='real' name='[Calculation_4083076079005687825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([OnNet Revenue]+[OffNet Revenue])/[Number of Voice Subscribers]' />
            </column>
            <column caption='Ave Data Rev per Sub' datatype='real' name='[Calculation_4083076079005966354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]/[Number of Data subscribers]' />
            </column>
            <column caption='Ave On-net Rev Per Sub' datatype='real' name='[Calculation_4083076079006781459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Revenue]/[Number of OnNet Subscribers]' />
            </column>
            <column caption='Ave Off-net Rev Per Sub' datatype='real' name='[Calculation_4083076079006986260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue]/[Number of OffNet Subscribers]' />
            </column>
            <column caption='Compare' datatype='real' name='[Calculation_4083076079017013269]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] == &apos;Ave Rev per Sub&apos; THEN [Calculation_4083076079004811280]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave Voice Rev per Sub&apos; THEN [Calculation_4083076079005687825]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave Data Rev per Sub&apos; THEN [Calculation_4083076079005966354]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave On-net Rev Per Sub&apos; THEN [Calculation_4083076079006781459]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == &apos;Ave Off-net Rev Per Sub&apos; THEN [Calculation_4083076079006986260]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Data subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OffNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OnNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4083076079017013269]' derivation='Sum' name='[sum:Calculation_4083076079017013269:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079017013269:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[dy:Date:ok]</cols>
      </table>
      <simple-id uuid='{207921CB-6CF9-46B6-89FC-435C0A305943}' />
    </worksheet>
    <worksheet name='Task 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Performance of each KPI in last week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
              <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_4083076078966431745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([OffNet Minutes of Usage])+([OnNet Minutes of Usage])' />
            </column>
            <column caption='KPI Total' datatype='integer' name='[Calculation_4083076078971117572]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Revenue&quot; THEN [Calculation_4083076078963347456]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Minutes of Usage&quot; THEN [Calculation_4083076078966431745]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OnNet Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OffNet Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;MB of Usage&quot; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076078971117572]' derivation='Sum' name='[sum:Calculation_4083076078971117572:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]'>
            <groupfilter function='member' level='[wk:Date:ok]' member='53' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078971117572:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078971117572:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{B61C7834-7285-4F5E-82DA-00EF7BAA7832}' />
    </worksheet>
    <worksheet name='Task 4_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Cluster of Tariffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{ec00e8c5-cfee-465a-9ff3-3fe6e5a12b93}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Total Voice Revenue' datatype='integer' name='[Calculation_4083076079019061270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='Attribute' name='[attr:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4083076079019061270]' derivation='Sum' name='[sum:Calculation_4083076079019061270:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' />
              <color column='[federated.05um8371gnde4212sdxz61s23u5r].[none:AdhocCluster:1:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>&lt;Sheet name=&quot;Tooltip&quot; maxwidth=&quot;300&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Clusters:&#9;</run>
                <run bold='true'>&lt;[federated.05um8371gnde4212sdxz61s23u5r].[none:AdhocCluster:1:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Voice Revenue:&#9;</run>
                <run bold='true'>&lt;[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079019061270:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Data Revenue:&#9;</run>
                <run bold='true'>&lt;[federated.05um8371gnde4212sdxz61s23u5r].[sum:Data Revenue:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079019061270:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Data Revenue:qk]</cols>
      </table>
      <simple-id uuid='{A4D33F28-48B1-4FE8-8E24-DBAF8B283669}' />
    </worksheet>
    <worksheet name='Task 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>KPI Growth rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
              <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_4083076078966431745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([OffNet Minutes of Usage])+([OnNet Minutes of Usage])' />
            </column>
            <column caption='KPI Total' datatype='integer' name='[Calculation_4083076078971117572]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Total Revenue&quot; THEN [Calculation_4083076078963347456]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Minutes of Usage&quot; THEN [Calculation_4083076078966431745]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OnNet Minutes of Usage&quot; THEN [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;OffNet Minutes of Usage&quot; THEN [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;MB of Usage&quot; THEN [MB of Usage]&#13;&#10;END' />
            </column>
            <column caption='Growth rate' datatype='real' name='[Calculation_4083076078984278025]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_4083076078971117572])-LOOKUP(SUM([Calculation_4083076078971117572]), -1))/LOOKUP(SUM([Calculation_4083076078971117572]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='KPI Condition' datatype='string' name='[Calculation_4083076078989168650]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_4083076078984278025] &lt; 0 THEN &apos;ALARM!!! &apos; + [Parameters].[Parameter 1] + &apos; decreased &apos; + STR(ROUND(ABS([Calculation_4083076078984278025]), 2)) + &apos;% in the last week&apos;&#13;&#10;ELSEIF [Calculation_4083076078984278025] &gt; 0 THEN &apos;Good news!!! &apos; + [Parameters].[Parameter 1] + &apos; increased &apos; +  STR(ROUND(ABS([Calculation_4083076078984278025]), 2)) + &apos;% in the last week&apos;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4083076078971117572]' derivation='Sum' name='[sum:Calculation_4083076078971117572:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076078989168650]' derivation='User' name='[usr:Calculation_4083076078989168650:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.05um8371gnde4212sdxz61s23u5r].[Calculation_4083076078984278025]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]'>
            <groupfilter function='member' level='[wk:Date:ok]' member='53' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078989168650:nk]' />
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078989168650:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076078971117572:qk]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[dy:Date:ok]</cols>
      </table>
      <simple-id uuid='{7D39B24D-7EAA-4212-85CB-6CF0025A37FC}' />
    </worksheet>
    <worksheet name='Task 5_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Portion of Data Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_4083076078963347456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Data Revenue])+([OnNet Revenue])+([OffNet Revenue])' />
            </column>
            <column caption='Portion of Data and Total Rev' datatype='real' name='[Calculation_4083076079022559255]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]/[Calculation_4083076078963347456]' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_4083076079023104025]' role='measure' type='quantitative' user:unnamed='Task 5_2'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_4083076079023116315]' role='measure' type='quantitative' user:unnamed='Task 5_2'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4083076079022559255]' derivation='Sum' name='[pcto:sum:Calculation_4083076079022559255:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4083076079022559255]' derivation='Sum' name='[sum:Calculation_4083076079022559255:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076079023104025]' derivation='Sum' name='[sum:Calculation_4083076079023104025:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4083076079023116315]' derivation='Sum' name='[sum:Calculation_4083076079023116315:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079023116315:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079023104025:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' />
              <wedge-size column='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079022559255:qk]' />
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[pcto:sum:Calculation_4083076079022559255:qk]' />
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' />
              <color column='[federated.05um8371gnde4212sdxz61s23u5r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.8784530162811279' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079023116315:qk]'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079022559255:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>Total Proportion</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='3.6132595539093018' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079023104025:qk] + [federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079023116315:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{03DE0764-712E-43DA-A29D-8E31728BE11B}' />
    </worksheet>
    <worksheet name='Task2_After dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which tariff has the highest data revenue growth in last month?&#10;</run>
            <run bold='true'>Answer is 17</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='MY' name='[my:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Tariff_Id]' derivation='None' name='[none:Tariff_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:Date:ok]' member='202006' />
              <groupfilter function='member' level='[my:Date:ok]' member='202007' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.05um8371gnde4212sdxz61s23u5r].[pcdf:sum:Data Revenue:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05um8371gnde4212sdxz61s23u5r].[none:Tariff_Id:ok]</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]</cols>
      </table>
      <simple-id uuid='{E26AAEF2-04E8-400D-8FFB-178A2237FAA0}' />
    </worksheet>
    <worksheet name='Tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis)' name='federated.05um8371gnde4212sdxz61s23u5r' />
          </datasources>
          <datasource-dependencies datasource='federated.05um8371gnde4212sdxz61s23u5r'>
            <column caption='Total Voice Revenue' datatype='integer' name='[Calculation_4083076079019061270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4083076079019061270]' derivation='Sum' name='[sum:Calculation_4083076079019061270:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05um8371gnde4212sdxz61s23u5r].[Tooltip (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action - Tooltip]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05um8371gnde4212sdxz61s23u5r].[Tooltip (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079019061270:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05um8371gnde4212sdxz61s23u5r].[sum:Data Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.05um8371gnde4212sdxz61s23u5r].[sum:Calculation_4083076079019061270:qk] + [federated.05um8371gnde4212sdxz61s23u5r].[sum:Data Revenue:qk])</rows>
        <cols>[federated.05um8371gnde4212sdxz61s23u5r].[dy:Date:ok]</cols>
      </table>
      <simple-id uuid='{1FAF4078-D8FE-486D-859A-6FF733E18B48}' />
    </worksheet>
    <worksheet name='task 2'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Tarriff 16 has the highest revenue growth </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis) (2)' name='federated.13mlsz6053ihih1cegxe70afur2t (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.13mlsz6053ihih1cegxe70afur2t (copy)'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='MY' name='[my:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[pcdf:sum:Data Revenue:qk:1]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[my:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:Date:ok]' member='202005' />
              <groupfilter function='member' level='[my:Date:ok]' member='202006' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[my:Date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[my:Date:ok]' />
              <groupfilter function='member' level='[my:Date:ok]' member='202005' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[my:Date:ok]</column>
            <column>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13mlsz6053ihih1cegxe70afur2t (copy)].[:Measure Names] / [federated.13mlsz6053ihih1cegxe70afur2t (copy)].[none:Name:nk])</rows>
        <cols>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[my:Date:ok]</cols>
      </table>
      <simple-id uuid='{6EA28312-BD92-4B42-86EE-614A5A5E42F5}' />
    </worksheet>
    <worksheet name='task3_after dashboard'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Total Voice Revnue is the highest </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis) (3)' name='federated.13mlsz6053ihih1cegxe70afur2t (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.13mlsz6053ihih1cegxe70afur2t (copy 2)'>
            <column caption='Total Revenue ' datatype='integer' name='[Calculation_675258535926009856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column caption='Total Voice Revenue ' datatype='integer' name='[Calculation_675258535930462212]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Revenue]+[OffNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_675258535926009856]' derivation='Sum' name='[sum:Calculation_675258535926009856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_675258535930462212]' derivation='Sum' name='[sum:Calculation_675258535930462212:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Data Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:OffNet Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:OnNet Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535930462212:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535926009856:qk]&quot;</bucket>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:OffNet Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:OnNet Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[sum:Calculation_675258535930462212:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[none:Name:nk]</rows>
        <cols>[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{50AC4223-AEDB-436F-91C0-680926CC7054}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MB of Usage&quot;'>
          <calculation class='tableau' formula='&quot;MB of Usage&quot;' />
          <members>
            <member value='&quot;Total Revenue&quot;' />
            <member value='&quot;Minutes of Usage&quot;' />
            <member value='&quot;OnNet Minutes of Usage&quot;' />
            <member value='&quot;OffNet Minutes of Usage&quot;' />
            <member value='&quot;MB of Usage&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='7' param='horz' type='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='5' type='layout-basic' w='89027' x='499' y='993'>
              <zone h='49007' id='9' name='Sheet 2' w='44514' x='45012' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#7e6ff2' />
                </zone-style>
              </zone>
              <zone h='49007' id='100' name='Task 1 and 2' w='44514' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='49007' id='101' name='Task 4' w='44513' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#dfedeb' />
                </zone-style>
              </zone>
              <zone h='49007' id='102' name='Task 5' w='44513' x='45013' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98014' id='6' is-fixed='true' param='vert' type='layout-flow' w='9975' x='89526' y='993'>
              <zone h='7445' id='8' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='9975' x='89526' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19727' id='10' name='Sheet 2' pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' type='color' w='9975' x='89526' y='8438'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13524' id='103' name='Task 5' pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078989168650:nk]' type='color' w='9975' x='89526' y='28165'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='113' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='112' param='vert' type='layout-flow' w='99002' x='499' y='993'>
                <zone fixed-size='280' h='49007' id='100' is-fixed='true' name='Task 1 and 2' w='44514' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#c0c0c0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='102' is-fixed='true' name='Task 5' w='44513' x='45013' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='13524' id='103' name='Task 5' pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078989168650:nk]' type='color' w='9975' x='89526' y='28165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7445' id='8' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='9975' x='89526' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='101' is-fixed='true' name='Task 4' w='44513' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='9' is-fixed='true' name='Sheet 2' w='44514' x='45012' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7e6ff2' />
                  </zone-style>
                </zone>
                <zone h='19727' id='10' name='Sheet 2' pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' type='color' w='9975' x='89526' y='8438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1AE13C1A-95C4-472C-BC69-0CC8784A433B}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Compare tariffs' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Ave Data Rev per Sub&quot;'>
          <calculation class='tableau' formula='&quot;Ave Data Rev per Sub&quot;' />
          <members>
            <member value='&quot;Ave Rev per Sub&quot;' />
            <member value='&quot;Ave Voice Rev per Sub&quot;' />
            <member value='&quot;Ave Data Rev per Sub&quot;' />
            <member value='&quot;Ave On-net Rev Per Sub&quot;' />
            <member value='&quot;Ave Off-net Rev Per Sub&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='7' param='horz' type='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='5' type='layout-basic' w='89027' x='499' y='993'>
              <zone h='49007' id='3' name='Task 2' w='44514' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#b4b4b4' />
                </zone-style>
              </zone>
              <zone h='49007' id='9' name='Task 5_2' w='44513' x='45013' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#b2a2ff' />
                </zone-style>
              </zone>
              <zone h='49007' id='11' name='Task 4_2' w='44514' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#4e79a7' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ff9020' />
                </zone-style>
              </zone>
              <zone h='49007' id='13' name='Task 3' w='22257' x='67269' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#b4b4b4' />
                </zone-style>
              </zone>
              <zone h='49007' id='19' name='Daily Rev_task1' w='22256' x='45013' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ff9020' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98014' id='6' is-fixed='true' param='vert' type='layout-flow' w='9975' x='89526' y='993'>
              <zone h='7445' id='14' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='9975' x='89526' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='38' param='vert' type='layout-flow' w='99002' x='499' y='993'>
                <zone fixed-size='280' h='49007' id='3' is-fixed='true' name='Task 2' w='44514' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#b4b4b4' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='9' is-fixed='true' name='Task 5_2' w='44513' x='45013' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#b2a2ff' />
                  </zone-style>
                </zone>
                <zone h='7445' id='14' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='9975' x='89526' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='11' is-fixed='true' name='Task 4_2' w='44514' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ff9020' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='19' is-fixed='true' name='Daily Rev_task1' w='22256' x='45013' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ff9020' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49007' id='13' is-fixed='true' name='Task 3' w='22257' x='67269' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#b4b4b4' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4EE89D7F-682D-4FBB-83C1-0D3481FBEC50}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='Task 1 and 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1682B1C-DE9F-46B9-AB08-87D04F9C291D}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:ID:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{117774B2-63BB-411F-8930-B5CC51BD2642}' />
    </window>
    <window class='worksheet' name='Task 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A6B2CF1-1347-4415-8B92-6EFDA055F7E0}' />
    </window>
    <window class='worksheet' name='Task 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078989168650:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[usr:Calculation_4083076078989168650:nk]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[wk:Date:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{279D1C25-719C-4FAA-BF46-C48BD4CCBDBC}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Task 1 and 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Task 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Task 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{209DE53F-DD8E-4EB7-8378-B5BD19BB6B2C}' />
    </window>
    <window class='worksheet' name='Daily Rev_task1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{929143E1-6182-4982-9D25-F11FF0366B5F}' />
    </window>
    <window class='worksheet' maximized='true' name='Task 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B07D3B81-1172-44E4-947C-CED5C14F6150}' />
    </window>
    <window class='worksheet' name='Task 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0A61192-5E89-4BB8-B8DB-3D8CA801ED1C}' />
    </window>
    <window class='worksheet' name='Task 4_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05um8371gnde4212sdxz61s23u5r].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:AdhocCluster:1:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4BC8334-EF9F-4E4D-B3FE-9BA08DBC699B}' />
    </window>
    <window class='worksheet' name='Tooltip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53E7FDAF-192B-40DA-A167-A984FDB5E501}' />
    </window>
    <window class='worksheet' name='Task 5_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]&#10;[federated.05um8371gnde4212sdxz61s23u5r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[:Measure Names]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E04B8622-64C5-4929-B314-C08EEB870572}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Daily Rev_task1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Task 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Task 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Task 4_2'>
          <zoom type='entire-view' />
          <highlight field='[federated.05um8371gnde4212sdxz61s23u5r].[none:AdhocCluster:1:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Task 5_2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{0D908806-DBA5-4884-BAC7-7F3204385C75}' />
    </window>
    <window class='worksheet' name='Task 1_After Dashboard'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:ID:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Tariff_Id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CBBC5-7EAC-4C60-944D-086832002E52}' />
    </window>
    <window class='worksheet' name='task 2'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[:Measure Names]</field>
            <field>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[my:Date:ok]</field>
            <field>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[none:Name:nk]</field>
            <field>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[usr:Calculation_675258535934341131:nk]</field>
            <field>[federated.13mlsz6053ihih1cegxe70afur2t (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{892CB426-8421-4DA2-9B36-011F93C950DD}' />
    </window>
    <window class='worksheet' name='Task2_After dashboard'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[my:Date:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[none:Tariff_Id:ok]</field>
            <field>[federated.05um8371gnde4212sdxz61s23u5r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17ECF3C0-C0ED-4CED-B33E-2A7DC9A9A8A2}' />
    </window>
    <window class='worksheet' name='task3_after dashboard'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13mlsz6053ihih1cegxe70afur2t (copy 2)].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02EAB440-8B4F-4427-859F-F071EA69E8D5}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{725AA652-34CD-4CF6-ADFD-9491795617B3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daily Rev_task1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3wU54H/8c/M7K60aqveexcCIYQoooMNxg523H127uzY8eVyaZdLfolL
      7Jzb2XG6z7HjGmOaccEYTDfNdARYQhUJ9d6llbS7Wm2Z3x/CGCIgFFHEPu/XSy9Js7PzPCPN
      d2eemeeZkao721UEwUXJV7sCgnA1iQAILk0EQHBpIgCCSxMBEP4JldbGPmyOoXMlvZ0mes2O
      K1KyqcdMfaPpspYhAuBCrH19/Nf3tmJxqvz18U0sWduIsa6Vp545zNk3aTsv/fc2WnudAGx4
      Zz8bDvUMm8vS08svfvIlzVUt/L+f72bvukLuu2Mt//HQBg4WGXnxx59T1X0BlXU6ePGnG1m1
      tflCV/OCaC7r0oVris5Dj2rs5nilkX2H2vCw1JLqdEcf6M2htQUs/awRv9ggnvxpMi8+uY+u
      AXj0iSmgQtHOY7xTZiNJhYGmNn7wk1JeeT6dn/+6iNdem4nT7qC6vIPf/6+R238yC7XsOGNm
      JzOWFjZsbaKrvocB+1A99n+Yx0f7uuhrMfHwU7No23+MbQe6SJ6eyARfE8s2tjEu1cCO3G7u
      mmFn9VsH+GJfF94RAfzk36J49rkjpE6No7uiBo3GjaYeJ6FeYDEE8MT3Y/jD7/Np67bx+O9n
      8u4vvgR/DVafAF74eTK/+dUeFF8DDz8Yy99eLRR7AFciKQpTsvzYsrac6EnxOJo62f5lK9Nm
      h/P+G/noDHr2flLMtg2V5FZYkEwm1mxswDEwwJ//XMwDD6WhSOARFoCmtoFPPj5OaFrwyeVb
      +8xUN9uJi/IE4MvVheyvUXnw3rjT6mE2WggfH8v37g7n84+O8ff3j+Pl68bqZSX0dFuIyYrj
      Rz/LJiPNl3tuj2LVhhZefPMm1KpGSuv6sei9+K8fp9NR3s+D/zMbS1Unjz47k5bD9Zh1GkJC
      PTDWdpBXaqSxw8bPX5hF5ZF68rccxyczgedfmMKuVcV0WCQRANcikTMnko/fKWTsnESSAp18
      UWRhfIInAQF64lIDuff7mSRE6TH4eTBnURLzcoJQ3N359k3BrFhRgRNAkrnjzhh+93IhN98a
      e3LpHkF+/Oe/RvHii0ewOWH2HeP4w1/mkhDuPqwmxbkN7NrbSmSCH4F+bqSOD+e7301Bq0j4
      +LghSUPzyVoFrc3Kto2VNJklAr016A1uaGQJkNHrFXQ6DXq9gkaBkt2V5NXZ8DdoUFVQtAru
      bho0GvAN1lN6uJGtG6pxM+gJijSg/OyxXz1zBf7ywjXCK8ibqGgDc+ZEkJriR3p2FGmJPuTM
      i6GnuZ+kCWGMnxRJSoSWfqeGnKlhhEV6M++2FBSbjbTxocTE+pIUrrBqr4nHf5yGLIGsyISF
      +zD75kS8JCexaUHEJ/oSGji08QeGeBGX6I+7BqqP1GPy8iZzSjR33h7P3HkRtDWbGD81ktho
      H8KjfAjy0xEQ4kl8SgBzZofTUNPP3Y9OIDHai9Bwb6IiPAkM9SQ2wY/QMC9iE4e+T54Xh6/k
      YOLcONLSAklK8iEm3kBYmBcT5yQQ6yfh9PLkW3em4K0OIomuEMLFOH6gin2NMg/dFXvB7y3c
      VkaTPoCbpgWOfMUukAiA4NJEG0BwacNOg8pftz4E4Z9QVVAZOoCQJInRuOWcFgBFlony9b9a
      dRFGGZPVSrupD4AQLx/ctdqrXKMLJw6BBJcmAiC4tGEBMDaXs/1ACZbuBrbsOnxyenNdPTZV
      BVRaGuqwOc++0P7mEp5++mlWbtoHgNnYTofRPGy+lvLDHCxp5MVfPsrbf3uN7/7y5dNe3/Hh
      33jq1RUXsVoW/uepF1BPnN9y2iysWb+JY4d3sPtgLr997mleW/wJpV/t5quqdgDWrl0zbCnt
      LU2YB3t44bHfMXiGUo7v/Yilm44Mm242dtDRM3x9z2b36rf4/KuG85hzgOeefh77Of72Z9LT
      3ozRYuWPjz2L8RzzWYwdtJ+h3itfe4bXPth2YYVeQ/J2fU55i4mNK9+hvmeQjZ+tw3ritdMu
      hMmSxEB9AZ/ub2HGmEByS6upy99DcV0zv/nev2OOGkNmjCf3z1+INXQM1QfWsXrbV0QF6fhg
      +Up2H60mO3Msxoo9/PovHzNx6kyy0qJ5939/xCufFuEnt7L4g3XERgWydPF7dBgttDU18ub7
      y+hvrkMJSWGg7itarB4kBLvzxC+fIHHKHOoPf8HqbUeI8oe3319JQPx4vJzdvPLHP9Bg1tF9
      fC9vr1hHSnoany5+jRqzwq5VyyiqaCAtewoeqpnnXvgNxZVd3JiTyNJVuyjdtxOth412XTxZ
      cUFs37EdS2sdH69djc0jglh/HT/8t7sp6tdSuWM7hTXVJKen88m7r7LnWDuTMlNpLt3N0TaJ
      IxtXUNAwgMdAI8s/38WR9e/yu0/zuG/RHLat/gQ3L4nNBytoKj5Mf38Xr7/xHkExiexc/T4b
      D1agtzZS3wctHf2kxIaw9ZPFvP/ZDqJDvVmxZBn7i2uJ9Vf4y2tvkV9Sz91330ZT6UF++4f/
      o8E4wKGta2gZUNi9djk7j9bR21iFRquyaV8xLaX5vPbnJ9hUZsVaeogjlWUERqUS4uvG6mXv
      cKC8nq82f8bO4kaObXybF1bmMTlewyuvLyY0YSzeGHn8sceYOHcR+9ev4EB5O16DLby/Yj2x
      mRPAaQPAy80djaJc+a37PDQX7WJzaR+fv/4kgyFZHNi9jQR/ePXtD85+CGQzd3G0pJhjRcXU
      NPWRmpDC7OmZaHQGxqSnkRrmYOPBDgL6j7J64w7KmhSOb1tLvcmKZ/Q0Vi35A58sfQeQSE1L
      YfKMaXS3tNFcupN123dT0Ggiys1Emy2QsWNTuGv+TCZmZlBcWERDcytoPUlLSyc10Mbmoi58
      +47y4bovaHUEE+PvzpENy9l/vJN9W7dT2zi03KXLlnK4UUOIl4Sq9SFK287OgqFPVtUxSJ/Z
      hlaRsZpNPPr4b0j09zy5vrmHD3Fw50dEJo/h4/fXg0bPmJQ0ZuZkI7v5EKnvZumKJSzbkkfJ
      7h10n+jYZbP00jvgYNXf36HkeAXHy6uISUxm+rQZaGQJW2cpz/3v6yxdvox1u4+w/PXfYrEN
      sHblUt7+eAu1eQdo6rPy5h//SGh8PKqq0tjWSfX+rXzx5V4Km6Ds4DpW/P0NwjOm464M/cu+
      WP0B+3JzURWFPV/VETxQTn6fP12HtlJc9hXPvfQ6Sz/4gE82f8mEMelMnzETZJkJCQEs33QA
      cLJty06mZo2l0zTI6iXvERKXxIzpM3jzpd/hkAbZvi8fnVcgY9JTcO8upk6bQOXm1Wzbux0i
      x+KrGx3nfcblzOboujdJu/lR9n34V4ISs3j1pT9js/UND4DeJ5BjO5bzt092kxIbgd7LgNMB
      s2+ewNbN+5FkLZNzxnG0rJcYz1aOdBjISY+gNPcLNImZhHvosHQ38vLL/8f9j/wnIJGYMY2a
      /P20dbRgdwsmKiKSKZOyCYuOIz42nEmTppCcnkFSdADe3gbsDgfICunjJ5A6PodIqYX8TgML
      Z0xgclYGep3CmOk3EYARbWAAA11Dyx03cRruxiIKao1MnTmL8VnZhBjcQdEyZc5t/PutE9hf
      1sG373uQ2xdMJzg8jkh/LwDGpo8lPjWLCZmZjE2JAllh6tQs9u45RPaMaWROnMy47FlMivGk
      392Atwa8A6OICvCktrqe+PQxaHXuuMsQP24SlYX7sTlV5tx6JxbFlwdnxTJh9i18+457aK6r
      IyFrOnMyYul06kiMT+Lp3/ycfVt3garS3daI7B9GRHgE06ZNYlJ2NjNuXMiuNauIHzcWSQKT
      VeHO++4l1N+HKVOnkj5pLtr6ffQFJfOv9z+ApHPn+zePZdzMm5mUM4u8PTsYM3EqmRMmkBQZ
      CEhkZE0h3N+bhrpKYlLSSZ04lYqCvdx6/93UVtQQERaErGjJyJrClDk30V+4ESU1m6yUMWSN
      S0E7Sk6Za/0TSQrRc+OdDxEfoufG+XO5477bqKtpOP1K8MWeBm2rOMSOEgf33TZ1RCsunN3a
      9/7Eyq153PeDX/HtmeOuSh1OPQ0a6m0YladBRyQAgmu6HgIgToOe0FxZTG17/xlfM7bVsvNA
      Pl9/UjgHjeTmHbtylRMuG5cKgN1mpa/fhNPppL+vjwGrDafDTl+/iYKda9hZUMvA4NBZDdXp
      oL+vj0GbjRV//h0lLb2oTge/+/Of6O+s5q3319JvsqCqTkz9fQzaHFgHBjD19zMwYMFssZ48
      DStcu1xnSKTTyjM/fYTcilYe+skv2PHh23Rpk1mYorL7WAs54xJZu/551n8Sz0d/e5F1S/7E
      8i/y8fCNxlSUR3rifOzddSx+9x0iwv0o3L2eO+7Yyg8evp833vuAqAkLCOo+QGVLPybZF7Oq
      YcuqJbhpXOMzxuF0AOIQ6NrldNDc2o6Hty+Oniaqmntpb2mgvrWTxKR4NJLMgz9+Cm+5F4D2
      9g6i4+Nx2DRMzc7htlvmoguII2d8MkH+BsbPuZ1F0xKpq2vCbJcICfJD9vbnZz98mFnzHyQp
      wpOyvD0cbznzYdX1Rh2luzuXagQb25s4VlVPfFIKzXW1uHl6ExXiS1l1CzFhBpzufvR2tREf
      G4ttoI+i4jKiEtNwGDvwCo3AU6ehpa4Cm9YT+yDoFSte/iFUlxWj8QnGS+PA19eH3gEFq7kb
      H3cFyTuUAC/d1V71y+LURnCghyde7vqrXKML51IBEEbW9RAA12kDCJeVqqo4HFfmhlkjSQRA
      GBESEtIouTJ8qtMDoA4leTSuiHCVSSDLo++cymk1VlUVp/MC+9oKwig2+iIrCCNIBEBwaSIA
      gksTARBcmgiA4NKGXQcQZ4KE86UyOvv/nOqMARitHZuEK+w62EyG3xpRllHOMLp/15aPqW1z
      cssddxHg+c3bzP19qA4rRwpqCPKxow9Lx1fqparNRHqUH1t27CMlaxrJUUGXd02EK06y2692
      FS7ZebcBZi2YSUxEFvTU8vn6zbR1NPPlrv1UlFWza89Wmppb+XTDVgA07t44B8xo3L2JjQ6h
      taXtsq2AIFyKC+4L1NjYQGt9MXleHoSGpWFvLCE6fQKh3tGEhHsTG+wNgCyB3eHA22Cg4zI/
      6U8QLtYFBMCbhCR3NA4HMckTSElMxNfXlwGPBBQfDzx1WpLiEwCoLM6lrKwaN3c9VcePMyZ7
      2mWqviBcmtPGA8hIRBh8z9gGEIR/dN2PB8hvbqS8o31ECxwXEkZacMiILlMQLtY5A1Df08OR
      xvoRLTDIw1MEQLhmiCvBgksTARBcmgiA4NJEAASXJgIguDRxVwhhRIzW26KIPYDg0sQeQBgR
      kiSNyh4EYg8guDQRAMGliQAILk0EQLisjjd0UlLTfsZhtqqq0muyMmi7emePhjWCHQ7HyUHx
      l2NwvMPpxGazjfhyhSvPqZ59+zAP2PhgWyEHSxpRgeyUML4zP4Oe/gE2HDjOoWNN9JmtOJ0q
      GkUmMdKfjPgQFk1Lxl135c7NDCtJUZSTrfnLcbNTRZbRjsKnCQrDDZ7lA7LXZOWpd7aTEh3A
      H3+0AFmWWLalgB/+aT1uOg03Tozn2YfnEOTrgVajYBoYpLy+ky2Hqnh+yS4ef2A63h5uqKrK
      oN0JqopGIyNLF3cHalVV6TMPUlbfyfjEEHSab85WjZrToEW5X1JQ1889d92CFig8sAObTyzd
      dcXY9cHMnz0FWdzU+ppQ32bE29ONH94+6eQG+/1bJ/KtqckE+Xrg9g+f8J7uOiYkhTE+IZQl
      m4/y7OIveXRRFrmljewuqAPA39udIF9PkiIDSIsJJMjXg17zII3tvcSH+xHs64ksS9gdTlq7
      +6lr7WVg0I7JMkhBZSuVTd3otAqKLDF9XDTxYb5YbY5rPwCqw0Zbl5Fe1Y2FaRoqeyFO6aDT
      IuGl9NJnNmFsLqJ76hQC3K92bQWAisZukiL8T/u0liSJyGCfc75PliUeWjieI+XN7C9qIDMp
      lLkTYvHS6+jqtWAZtGO3OymqbqPTaMHg5YZGkTla0UJ3/wAWqx0Pdy3Bvh4kRQbg46Ej0OBB
      fLgfUcE+eOl11Lf10t5joqd/AC+9bnQEoLWtA2ufkfx2G+kxJmqPV1JbV4lTH85NOVM4WlDG
      dfoYrlGptrWHcfHBF/VeSZLITgknOyX8tOl+3t8Mt8xMCh32PovVRmu3ibAAL9y0Z9+so0MM
      RIcYTv5+zQdA1nmQkZ6KJSqIph4bfrIdn7FTSRw3kQGbg87mOiZOn4HbCDdX7FYTDS09REdH
      IEsqHZ1GAvy9qauuwtM/jEBfr5Et8Dqhqir1bb3cMiXpipard9MSG+p7we+75gPwNb1PAAmn
      7UG1eGi0eMQnX5byCvMOY7basWr0pAS5UVhQwKyZ2ZQWFtArN3DvrXMvS7mjncVqxzxgI8Aw
      OgbIX7MBsFmMfLR8KXZDPPffsRDdyQdOq7Q0t9DbXEMXnjTXVTHvpm/x1fbP6ZUN3Dx/7inz
      XjjVMcjuXTsZlNxJjw6j0zYIOn8CDD44VYWxE7IpLKsckXW8HhlNA2gUGS/96DgmvWYDoNUb
      mDF9JvjFkbd9FR8fbOT+Bdl0WhR8tXCsJI/wiEgKq1uYBww6BpHPcex3viRFx6y5C+htr2df
      QQ0zJoXS1tpMZVUZqpsHbbXHCI4dd+kreJ1q6eonwEePRhkd11iv2QCcqqPPQoDBg0HJnRtn
      Z7Fv517GTpxGVlo0SnATBr1MaEgkJTXNmKx2dJpL//TxCYpi4Q1RAHj5wB133zf0QvrlOeS6
      XtS39RIV7DNqHrR4TQcgKnksSDJhi+5hjlPCTadFQmLqzJyhP7AsM3OCAVBIy5xIUoaE3v3i
      Nn7V6WTvjg0YB7XMmHMjBv3pXXvbGyowOn3oaqtn0sQs2ptqUHwiCPAeHbv6K6W+rZeUqICr
      XY3zdk0HQD5xRVrnpufUzUyj+abamrPMc8EkiYysVApLYLCjmi0VbeRMHktddR0Om5ONW78g
      IyGQvU0eTMqagNHSyqDRm4AxgZdS6nVFVVUa2ozcMDHualflvF1TAbAe+BvO9rIRXaZu8r+j
      hKT/0/kkSUKr06HVqrS3N1BzPA+NYsM7IBF6Kpl1ww1MjdLg3hUOkkRUZCRVVSNa1VFvYNBO
      /4CNQIPH1a7KebumAuBoPIKj7sCILlObfvt5z6toPAkMBHu/QlBoDGFhkYSHh9Cl9OPQ65Hc
      ZMJ83EBV2bP1S1r7Akgcs/DS9jzXkT7zIKqqYvB0u9pVOW/XVACuNp1bAPHxAAEkZ3wz3ZCa
      cvLn1BPXIm5c9J0rWrfRYOgM0FAHt9HCpQPQbxlkYHBkn3Li5+2Ochl60Y4GX58BGk1cOgDL
      thSw8WDFiC7zrV8uIsTPBbtJqEO9QGNDDaPqIYsuHYBrSVtTHTqfYHy93DH3dlLT1EFsXByd
      TfX4BEde88fVKip9Zisxob6j6iGLIgDXAksL+/Or0GqruGX+HArzj+IZHMFAfzed3UbK6zq4
      YfaUESvO1N3E+k07iUqfTE5GIvu2raPGCPOnZrD/aAW33TzvgpcpSRI/umMy7joN8igamDEs
      AKfuvtRzDHm7WM5z3EHscnxwOJ3Oc5Q38gU6HWcv70yaq0tobqgmKHk2amsBDocDL083CvPz
      cJ8+D4fDypj09BG761pzXQUdbY1MnH8XreWHcDhiUTwCyPbR4PQNJiK47bzL+se/n4f76Bvp
      N6y1Jp0YdiZJElyGy9lDi5XO/DXipZ2jrIscXvdPy5PPXd4/foXHpzNx5nw68zYxIHvT2tqE
      RpFRNFrMnTXkF1VSXd9wQcs815ePbwABgcEc3bOZAbzo7u6ir6uZvNpGnF0t5OXlUd3Yfl7L
      uiz/sCts2B5AkqSTY4EvxyYpIZ19rPFl+IOeuj5XwsWVp+fWe+775tfwKFIyh37MyJw8YnUD
      8PELxNs3AENAJHpvH1SHjVk3LGTALuGuUfn2t29H7+l9XutweT6yrizRBnBBQ3uCE4NHlKHG
      9dcX84LcR89V3JHgmiesrwEt1UW89PyL7Dt6etcPp91KW1sbGz9ZRUHefj7dmgtA0aENfLrx
      q4sur+zoXt58421KqptPm24xdtJj6mPTp+spLy/gQGEFdquRNZ98QkVj50WXN1qIPcBVEho3
      ltkzepicEc3Lj/0U94yFxGk7CE/JwNLWTlF1M72mFqzB2Vi6W+hTfPDVKqjqxTXNUsZPobVL
      JjHUnTUfriRx4iQayo4RHByFxrOXwsouyptKmDT7DuryDtGn1eOmG32N2gslAnAVKRoF+jsJ
      GDMdbx8tMTGZpCVGUGCTWbAgiiCPfix+4xi0tdLZ1Eh9sxuzGc+ldDQwdzTQ0tNNb2EpSXFp
      hCgmLMHh3HBDDP2WGianJ9Be1s2YgCBK8guImj9jxNb3WiQCcBVNmZkDwKMP3Xfa9Ozsf+xP
      H82iRdGXWJrCuPFpeHlpyRpvIioxCQ93T9yw4dApBCXKOJxeyBKEpGbRevgQWZMnXmKZ1z4R
      AJch4ec/1PCdNHXqKdNP3ExJd8rPKIyfdOo81y8RgCtkwGFhVdXSEV2mVtZyb8LDZ3zN3tGB
      ed/+ES1P8ffDc8b1dUgkAnCFOFUnLZaGEV2mVj77SAR7ays9Kz4Y0fJ0SUnXXQDEaVDBpYkA
      CC5NBEBwaSIAgksTARBcmgiA4NJEAASXJgIguDQRAMGlnfFK8Nfjgt00Ct66kb0bgU5Rzn7b
      DHdf8Awa0fJUWXfW8jzctfh7j+yDxWSkM5engqcysrdL0Z5j3VA0yH4X/sSUc5G9vU4fM84p
      Y4LVy/NY3ctNqu5sP21ks0YSOwXh/KioOE4MjFckaVQOkRy2B7BfhjtBCNe/oSCMnvsBfW1Y
      AHTK6LmvoyBcqtMCoMgy4Qa/q1UXQbjixAG/4NJEAASXJgJwgsPexS+/9zC/ePolOk22Ya+/
      8PMHWb7p8GUrv7cmlwU3P0TvP5mvdOtyXv/wm4eINBZ/yeb9BSx+5012b/6YRx75HkvW7mL5
      iqWYrHZ6ar9izc6jpy/EaaOwsJS6o1/w8l/XnrGcV37zfSq6h08vLy7GYjv/2zT+7Bc/w2T9
      5/NX7FnFK+/vBGD53xdTf/wQK9Zs44XHf8SPf/E0hUVHWL3uwh+eUl5SjMXWxk+//wxfn94Z
      NHfwwUcbAFB+9tivnvl6ZlmSMLiPjgccjzSnvZ3XX/kcW185nmFxvPbyc7SrfhR9sYwPVm9k
      zbr1TJs1l8Wv/paD1f0o7YW8+t7nNFTm896SxRw4cJDN+0oIVNp4/KmXMMSmsvadP/Du8s8Y
      m53FX597glqzBwc/f5clG3OZPm0qWNp5/tePseFgFc15m9jdouOHDyyieM86nnjm9wREJfD+
      K8+y+VAt0QYbTz79IgYfL1Z88DHH203MnZpJXf5mnvvT2yTn3I5St48W1YtdO/Po7qllzryF
      SKZmShrNbPvwFd5buYFxObMZbDjCwtu+g19UNJs/XU1BfTupIRp+9divGfCKIj0+nF0bP8Dd
      O4AXnnkGjX8kOz9bQmlNE8/+6qe0aMOZPSGat9/+iK7qXNqcXny5ZRsHt6xkyfpc0uP8efqJ
      J2ga9Ka6PB/V2IYSkoSvzsJTP/4RuyqNyO2FvPLaW3Q4DVTvX8Xflq7GN2YSMycm8OYfX2Lz
      gWIefvgBFi9Zio+1jW7cqaoyM29WBuuXv8qzL7+CA5W333wLu0bHK799jrIuB9WH9+O0dbDr
      WCdHN6/kyaefpk3jQ8nGDew48hWT58xHLw1wJK+E0oObxR7gVLKs4QdP/hFn0WYIiKOuspyv
      igv4ryefZ/acabi1HiL5Wz+kfssaDhwrYPa936W+dC+3LJxPjyYOe/NhKup7SY3zZe2mLRwu
      bmXRhCBWrVxGe2AWiV6drNlWTJBipcVopnTvBqTEhbhX7yckYzL33H0PCg6WvfUOSePGUJhf
      iE9gHAX71vHua4u599FHwO5k5m3fpTRv+8l6+xoMNDY1oQJ6/1jeeO0Fvr6jj7WnkcKKOo6U
      1/Ot9CAOFjUQFJ/O7FkLmDcxkfFz7qC36Sgr33sV38QJVBYVn1xud08vyUkRrP1sCwMWE+0m
      DbOmzeRfbr8RJA+OHdnO59t38MZzT1Db3c1nXxQRrLHy8bI3GPSLo/l4GfbBTpas2U9skBdO
      cy+GmCQOfbqWwwUFzLntLr7c8SlrPy/kkfsXnbyKIGnc0Kn9dPdZkWSZ2/7jKe6emXriVZWt
      mzbR0eMkMRSUqIl05K1n9r/9N0Vr19LVW82f31jJ6sWvkt/twYLpM/iX22/EJ3wMs5J1HKjo
      xGkzk59fTMHhArEH+JqqOrBLBm771kxCI8LYs20LvtFpjEuIID1jEv3GTm68+TbWvPcqiTfe
      xZT4UMLix6J3mkkaMx4P70Aigzzw99JxqLiWKdNnERMaxNi0BILTcmjNXYcmcjIJviYKm018
      66YFREZGsnvNYpSkmdyak4rTPYjk6BDCgr3ZtHknYyZPpaEoF0N0Og/cdwsr3v+I7Ok5hEQm
      EOCtMDEzE9uAicjxN6LtLCcoKoFJc24iJcKPnu5u0sdmoDitDMgGIoIMjE1JxjM0lshAH1qP
      H8KoCyU+NpGwIE8W3HQLuzZvJDRtIlMykujt6cJg8OPA4WImTcnCYenFNzyRCXEe5FYamZSe
      SKB+EDlqOr5SL/c89J+4W2ooaOzju999hKI9W9FHpTAuJYlFOYm0qsGEGyTWrVlHRGomk7PT
      iU9KQ1HcyUxwZ2dBE5OnTScpOojuLiPfe+Qedu0vIzkliTsX3YRqt2JVPUhLCmLT+p1MnppJ
      UHg8/oERLJg5kaVv/JXsbz/AnXMyqe7zZFaSN5nz7iDOYOVgRTcp0TGMSYvCPzKFUB8FY/8g
      MVHhp18JVmSZKF//q7kdCsK5Oa38/S+/52iThf9+7Aligy6te4kIgODSRBtAcJv5ZOEAAAZE
      SURBVGkiAIJLOy0AqqqOyi6tgnCxTt8DqJfnuVmCcK0Sh0CCS7vke4OW1LSzp7COWRkxaDXn
      yNMljZU495uv+jCMa+J5cRdfg0upe1NnH919FrKSw9BqFDSKjFaR0WgUtIp84oF6l1DAZTYs
      AA6H44LaAXsL61i//zjHajvQai52LMG5D7su+0HZJRZwzR80/pMKquexBmfbhjuMFsxWG5tz
      K7E7nNgcTuwOJ3a7E7vTiSxJ6DQyWo2CViOj1cjoToRDe9p05eR8uhNfWu2Jeb/+XSOj0ypo
      FWXYe09+V+ST857PU0BPuw4gIxFh8EW5gEExFquNpo4+YsN8R+WQOOHSmAYGMQ3YCPL1GGpD
      npj+dVvS7nAyaHcwaHNiszsYtDuGvtsc2OwnXrOf+NnmGDbPoP0f3+fE5hia32b/h+8OxynT
      nMjyifBpldOCdOq04YdAzkEKj9UyLj0Vm9nIzj2HyZk9m7LDu/CNyyRANnK0ppdZU8bT31nP
      li9zCY5Jxt5eRr82hGgfOweKGlhw01zcRtETw4UzUx2DFB2rGtoeLEPbw9SZs6g+ug8pIJEg
      TS/9kg+h/l6ASlVZMcExyTRUlROfkk79sUNY3MPJSI4ekUOhCzlJY3eop4fH7sBmOzV0juEB
      qCopJK+6nXHpqZQU5hObHE/utlVYPMfRVpiLh05PlL9MdZeN+MAobrtJT/7xWmpabOi0lcjh
      2YwJqaW43kxWjOelr7FwFanUlBby1fEWxqWncqzoKDGJ8eQe2M7ggDdKbwnNdid2jZ7EmAgs
      xjZyD+WS5RlKX183ZpuJqoYBUEoZkxSFdgQScCEPN9dqJLQaGQ/O/rC/Ya3WHUcqqDlWSo95
      kDHjMmmqOka/HEaURxcNbd1otW54eukZtNoBKD9eSVJ8HA57H91mO7JjgAbjIO7O4X3qhdHF
      Ye1n885d1B4rods0SGr6eJqryzD1mLFau+kdlBifHkd9y9CjV3duWU9LWysNnRYCDJ6AF0mx
      PlTWtVyz7aTTeoNKSMyekk1kZBh9rQ2oGg2VFfXkzJ5OXXkJ8emTCNYPkl/ZT6TPAP2yF7Iq
      ExYSSGt9DXj4obP3U9fSQ9KYNLzdxQNoRjNZ40b25BzCI0IxtTfgVDRUVtQxdc48jM016H1D
      cFdNBEal0FxXxYwbbyE5LgqDXsOBvQfodWhRTW0ERKYQFxF8TZ4NOmsj2Gw24+Fx9qeGm81m
      9B4eotnrIs65PahOzBYrHh6jryv9WT+iz7Xxn8/rwvXlnP9vSR6VGz+IK8GCixMBEFyaCIDg
      0kQABJcmzlMK14RNHy8mee49mBsrSB8/HmtXJSu+OM59C8bx8arNGCITCLK14JkxD7V4A+2R
      M/ExGrFrzGjsEjkzprJry3pae8yk58yiJncPIXHRdPRrqCvZx3ceuIUj1R7MzAwD7NTWthIT
      EyECIFx96kAHPjFjaSovx9t9qGteaVkL42O86LA6UVUVWZbwDY+ju7kGjSqj03jgbTDhlHyQ
      VRXsAygB0dw9N4bNOw5QVt1Ki7ED/9hsMtPjOZJ3DJs2nJ9870niJs7EYern3gcfuvTeoIJw
      qWrLyqk4XocDDRFedo41daEx1mKXdXRYJDKzsugzDWJ1KMjGGjTB8aiOQbRad+yyA40TbGgY
      aKlk5bFCxuTMICggAq3GTFBkGs01EkrrUYyegaRPmk3GlGxaS/NxOByX3htUEEYz0QgWXJoI
      gODSRAAElyYCILg0EQDBpYkACC5NBEBwaSIAgksTARBcmgiA4NJEAASXdsbeoOIO0YKrGBYA
      p9MpAiC4jGEBkGVZ9AYVXIZoAwguTQRAcGkiAIJLEwEQXJoIgODSRAAElyYCILg0EQDBpYkA
      CC5NBEBwaSIAgksb1hdIVVVxa0TBZZwxAKI3qOAqRG9QwaWJNoDg0kQABJcmAiC4NBEAwaWJ
      AAguTQRAcGkiAIJLEwEQXJoIgODSRAAElyYCILi0M3aGczgcV6MugnDFiT2A4NKG7QEkSRK9
      QQWXIfYAgksTARBcmgiA4NJEAASXJgIguDQRAMGliQAILk0EQHBpIgCCSxMBEFyaCIDg0kRv
      UMGlnRYAJypNvcarVRdBuOKG7QGciBvjCq5DtAEElyYCILi0/w8mrfMaZVUN8QAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eXhc13Xg+XtL7agFhZUAARAkwX2XKJGi9s2yZNmWZcmWbTmyEztLZ9Lx
      fD3p6XTPpLuTTM9M7CSd8RLLiSJrsSTLlGVblmStFHeKFLiDIEjsewG1r2+fP4oACQJFEiQI
      klL9vo+fhPfucu6re967955zzxXUdMyiSJFPKOKVFqBIkStJUQGKfKKRz/zjT7/zF1dKjiJF
      rgjy2Rf++nvfvRJyFClyRbjoIZCeSzE8GgNgJBSaMYGuNnQ1w9GDB8lq5pUW5SLRGQlFLiCd
      yUDfwGWX5mpjSgV45od/z/NPP81Pf/Ikb76z87yFbNvyPgCv/Pyl86b95//7v/P800/zzE9+
      zAc7D05T3NnnleeeQ9ENrKuk/7/20rO88uqb08iRZtv7+y6bPNc6k4ZAALK3nK88/nUA3v75
      T+mLXYfad5ide49gmBYPPPIVysU0xzvDVJUHAOg/eYTmvfvIZrKsvflOelqPcN9n7sdU4nyw
      q5U7br8RAH91I4898TgALz77PNy0mo+2vsWxjgEq6pq45+blfLCrjTtuv4GRjkOMiDV4sr1s
      3XUAu6eMhx/9LPvefYvhWJR4NMbKm+9jebVAc7fKhjUL2fr+Fm6943a6j+2fkEcW8m37+VM/
      wrJ7UA07j37tSxiJYV795evoSNz/xS9hho7Tl7HTsncnS5av4FDLSTTRTsPiFWz77SuMxNPM
      bVrL7TevY9t7W7CZabSSGmypEIORKJFwlJq6emLhEYJ1S/jUnRt44xfPEU7qBObM4zP33c67
      r71CLJ4hnkxx9xe+Ql25k1+/+CJJxWD97fdRoo/y3rZ9yC4fD3/pYexjrykjg+WqRMolMAAJ
      +OVz/0LOtJPJGTz2jScYbT/IB7v2YxoW9z38ZapK81m7Du0i61/E0oYyPtzyDktvuo0PXnmR
      eNagfulqbtmwlvaTx6mpreK1l3424frHmfMOgVatXERX5xCNy9Zy880bWLW4hq07msHIMRJJ
      jqerXbiCdeuv56tPPMGyhfWIuQjDSY2ju7dTvXDJeLpcKsahAwfY8savcJfXYaSH6Ynb+NoT
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Task 1 and 2' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Task 1_After Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task 3' width='192'>
      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
      xenoGwDg/wPakTWJPAZ02QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Task 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task 4_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task 5' width='192'>
      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
      nOzc+dNH/j8Q7PxIRE7bCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Task 5_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Task2_After dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Tooltip' width='384'>
      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
      +CZPnf4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='task 2' width='192'>
      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
      zNjrdTqd8P8BQaGeCgM+BJoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='task3_after dashboard' width='192'>
      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
      MjKS8+fPs3z5cux2OxUVFbjdbvLz81EqlUxMTJCZmSk/PWtqamhsbGR6eprp6WkSExMXPJA9
      Hg+dnZ309vbS1taGVqvl2rVrJCcnMz09zeXLl7HZbPT39xMfHy/zsOPi4sjMzJTLGNrb29m2
      bRsGg4GWlhaWLVvG5OQkS5cuneMHJoQgOTlZJvoXFxdjsVjo7e2dM1WaD37vOMF6vZ7g4OBH
      ej16vV4mJyeJi4v7FFr224HX60Wv1z/0jfHbgE/WfaFuLT6Mj4/LVZ+fNu7LBC9WRizis4TF
      WqBFfKbx6XISF7GI33E8kBPsNg7z+hs/p+JaFTdu3KBrzEF2VupDR4tD38Lf//MFNm3KoeL4
      /+FP/8cPiF+zizsnfshf/Z9fsmrTU0QGqvC47LTXXadxyE5aQjRCSExPDHDhfDlLlmXykGjp
      I2NwcJCysjK6u7uJi4vD39+fgYEBmpqaSE5ORpIkWlpaqKysZGJigoSEBHneOTExweXLl2lu
      biYoKIigoCAqKyupra3FYDCwZMkSWdW4s7OTpKSkx74IFkJgt9u5du0aISEhBAQEYLFYqKys
      5M6dO2g0Gtlzq7y8HD8/vzmJJIvFQmlpKa2trURERKDT6ZienqanYVirAAAgAElEQVS8vJzU
      1FR5setyuTh58iTJycmPvRzaaDRSWlpKU1MTKpWKiIgIqqurqampYWxsjCVLljA8PExZWRnt
      7e1ERETMCeWaTCbKy8uJj4+XI1cej4ezZ88SGRkpq9m1tbXR2tq6YFbbgymR2mDWrd+AfaCL
      0LRscrNSEU4LN6sqqKyuw+mVME0O0jc6RVNdHQ7/GA4UPIl5qJMTF2/w9POfI2imjbNVPbzw
      4ovEBqsAifJTb/H2sXepaJh1J5webuZHP3yTs+fOYn240+kjwbcQ27NnDytXrpSlzX01/jCr
      Hu1yuSgsLESpVN7HJtq1axcFBQWypHp6ejqHDx/G4XDQ0dHB+fPnWbVqFStWrODixYuPtwN3
      0djYiF6vl3nNo6OjZGdnU1BQQEVFBZOTk9y6dYuDBw9y69YtjEajvO/FixfJy8tj+/btlJSU
      4Ha7aWxsZHh4WOZA+MojxsbGPrFd6oMgSRJPPvkkBw4c4Nq1a9hsNhISEjh06BABAQHU1dXh
      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
    </thumbnail>
  </thumbnails>
</workbook>
